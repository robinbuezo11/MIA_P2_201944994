Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> list_commands
Rule 2     list_commands -> list_commands commands
Rule 3     list_commands -> commands
Rule 4     commands -> command_execute
Rule 5     commands -> command_mkdisk
Rule 6     commands -> command_fdisk
Rule 7     commands -> command_rep
Rule 8     command_execute -> EXECUTE GUION PATH IGUAL CADENA
Rule 9     command_execute -> EXECUTE GUION PATH IGUAL CADENA_SC
Rule 10    command_mkdisk -> MKDISK params_mkdisk
Rule 11    params_mkdisk -> params_mkdisk param_mkdisk
Rule 12    params_mkdisk -> param_mkdisk
Rule 13    param_mkdisk -> GUION PATH IGUAL CADENA
Rule 14    param_mkdisk -> GUION PATH IGUAL CADENA_SC
Rule 15    param_mkdisk -> GUION SIZE IGUAL ENTERO
Rule 16    param_mkdisk -> GUION UNIT IGUAL CADENA_SC
Rule 17    command_fdisk -> FDISK params_fdisk
Rule 18    params_fdisk -> params_fdisk param_fdisk
Rule 19    params_fdisk -> param_fdisk
Rule 20    param_fdisk -> GUION PATH IGUAL CADENA
Rule 21    param_fdisk -> GUION PATH IGUAL CADENA_SC
Rule 22    param_fdisk -> GUION SIZE IGUAL ENTERO
Rule 23    param_fdisk -> GUION UNIT IGUAL CADENA_SC
Rule 24    param_fdisk -> GUION NAME IGUAL CADENA
Rule 25    param_fdisk -> GUION NAME IGUAL CADENA_SC
Rule 26    command_rep -> REP GUION PATH IGUAL CADENA
Rule 27    command_rep -> REP GUION PATH IGUAL CADENA_SC

Terminals, with rules where they appear

CADENA               : 8 13 20 24 26
CADENA_SC            : 9 14 16 21 23 25 27
ENTERO               : 15 22
EXECUTE              : 8 9
FDISK                : 17
GUION                : 8 9 13 14 15 16 20 21 22 23 24 25 26 27
IGUAL                : 8 9 13 14 15 16 20 21 22 23 24 25 26 27
MKDISK               : 10
NAME                 : 24 25
PATH                 : 8 9 13 14 20 21 26 27
REP                  : 26 27
SIZE                 : 15 22
UNIT                 : 16 23
error                : 

Nonterminals, with rules where they appear

command_execute      : 4
command_fdisk        : 6
command_mkdisk       : 5
command_rep          : 7
commands             : 2 3
init                 : 0
list_commands        : 1 2
param_fdisk          : 18 19
param_mkdisk         : 11 12
params_fdisk         : 17 18
params_mkdisk        : 10 11

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . list_commands
    (2) list_commands -> . list_commands commands
    (3) list_commands -> . commands
    (4) commands -> . command_execute
    (5) commands -> . command_mkdisk
    (6) commands -> . command_fdisk
    (7) commands -> . command_rep
    (8) command_execute -> . EXECUTE GUION PATH IGUAL CADENA
    (9) command_execute -> . EXECUTE GUION PATH IGUAL CADENA_SC
    (10) command_mkdisk -> . MKDISK params_mkdisk
    (17) command_fdisk -> . FDISK params_fdisk
    (26) command_rep -> . REP GUION PATH IGUAL CADENA
    (27) command_rep -> . REP GUION PATH IGUAL CADENA_SC

    EXECUTE         shift and go to state 8
    MKDISK          shift and go to state 9
    FDISK           shift and go to state 10
    REP             shift and go to state 11

    init                           shift and go to state 1
    list_commands                  shift and go to state 2
    commands                       shift and go to state 3
    command_execute                shift and go to state 4
    command_mkdisk                 shift and go to state 5
    command_fdisk                  shift and go to state 6
    command_rep                    shift and go to state 7

state 1

    (0) S' -> init .



state 2

    (1) init -> list_commands .
    (2) list_commands -> list_commands . commands
    (4) commands -> . command_execute
    (5) commands -> . command_mkdisk
    (6) commands -> . command_fdisk
    (7) commands -> . command_rep
    (8) command_execute -> . EXECUTE GUION PATH IGUAL CADENA
    (9) command_execute -> . EXECUTE GUION PATH IGUAL CADENA_SC
    (10) command_mkdisk -> . MKDISK params_mkdisk
    (17) command_fdisk -> . FDISK params_fdisk
    (26) command_rep -> . REP GUION PATH IGUAL CADENA
    (27) command_rep -> . REP GUION PATH IGUAL CADENA_SC

    $end            reduce using rule 1 (init -> list_commands .)
    EXECUTE         shift and go to state 8
    MKDISK          shift and go to state 9
    FDISK           shift and go to state 10
    REP             shift and go to state 11

    commands                       shift and go to state 12
    command_execute                shift and go to state 4
    command_mkdisk                 shift and go to state 5
    command_fdisk                  shift and go to state 6
    command_rep                    shift and go to state 7

state 3

    (3) list_commands -> commands .

    EXECUTE         reduce using rule 3 (list_commands -> commands .)
    MKDISK          reduce using rule 3 (list_commands -> commands .)
    FDISK           reduce using rule 3 (list_commands -> commands .)
    REP             reduce using rule 3 (list_commands -> commands .)
    $end            reduce using rule 3 (list_commands -> commands .)


state 4

    (4) commands -> command_execute .

    EXECUTE         reduce using rule 4 (commands -> command_execute .)
    MKDISK          reduce using rule 4 (commands -> command_execute .)
    FDISK           reduce using rule 4 (commands -> command_execute .)
    REP             reduce using rule 4 (commands -> command_execute .)
    $end            reduce using rule 4 (commands -> command_execute .)


state 5

    (5) commands -> command_mkdisk .

    EXECUTE         reduce using rule 5 (commands -> command_mkdisk .)
    MKDISK          reduce using rule 5 (commands -> command_mkdisk .)
    FDISK           reduce using rule 5 (commands -> command_mkdisk .)
    REP             reduce using rule 5 (commands -> command_mkdisk .)
    $end            reduce using rule 5 (commands -> command_mkdisk .)


state 6

    (6) commands -> command_fdisk .

    EXECUTE         reduce using rule 6 (commands -> command_fdisk .)
    MKDISK          reduce using rule 6 (commands -> command_fdisk .)
    FDISK           reduce using rule 6 (commands -> command_fdisk .)
    REP             reduce using rule 6 (commands -> command_fdisk .)
    $end            reduce using rule 6 (commands -> command_fdisk .)


state 7

    (7) commands -> command_rep .

    EXECUTE         reduce using rule 7 (commands -> command_rep .)
    MKDISK          reduce using rule 7 (commands -> command_rep .)
    FDISK           reduce using rule 7 (commands -> command_rep .)
    REP             reduce using rule 7 (commands -> command_rep .)
    $end            reduce using rule 7 (commands -> command_rep .)


state 8

    (8) command_execute -> EXECUTE . GUION PATH IGUAL CADENA
    (9) command_execute -> EXECUTE . GUION PATH IGUAL CADENA_SC

    GUION           shift and go to state 13


state 9

    (10) command_mkdisk -> MKDISK . params_mkdisk
    (11) params_mkdisk -> . params_mkdisk param_mkdisk
    (12) params_mkdisk -> . param_mkdisk
    (13) param_mkdisk -> . GUION PATH IGUAL CADENA
    (14) param_mkdisk -> . GUION PATH IGUAL CADENA_SC
    (15) param_mkdisk -> . GUION SIZE IGUAL ENTERO
    (16) param_mkdisk -> . GUION UNIT IGUAL CADENA_SC

    GUION           shift and go to state 16

    params_mkdisk                  shift and go to state 14
    param_mkdisk                   shift and go to state 15

state 10

    (17) command_fdisk -> FDISK . params_fdisk
    (18) params_fdisk -> . params_fdisk param_fdisk
    (19) params_fdisk -> . param_fdisk
    (20) param_fdisk -> . GUION PATH IGUAL CADENA
    (21) param_fdisk -> . GUION PATH IGUAL CADENA_SC
    (22) param_fdisk -> . GUION SIZE IGUAL ENTERO
    (23) param_fdisk -> . GUION UNIT IGUAL CADENA_SC
    (24) param_fdisk -> . GUION NAME IGUAL CADENA
    (25) param_fdisk -> . GUION NAME IGUAL CADENA_SC

    GUION           shift and go to state 19

    params_fdisk                   shift and go to state 17
    param_fdisk                    shift and go to state 18

state 11

    (26) command_rep -> REP . GUION PATH IGUAL CADENA
    (27) command_rep -> REP . GUION PATH IGUAL CADENA_SC

    GUION           shift and go to state 20


state 12

    (2) list_commands -> list_commands commands .

    EXECUTE         reduce using rule 2 (list_commands -> list_commands commands .)
    MKDISK          reduce using rule 2 (list_commands -> list_commands commands .)
    FDISK           reduce using rule 2 (list_commands -> list_commands commands .)
    REP             reduce using rule 2 (list_commands -> list_commands commands .)
    $end            reduce using rule 2 (list_commands -> list_commands commands .)


state 13

    (8) command_execute -> EXECUTE GUION . PATH IGUAL CADENA
    (9) command_execute -> EXECUTE GUION . PATH IGUAL CADENA_SC

    PATH            shift and go to state 21


state 14

    (10) command_mkdisk -> MKDISK params_mkdisk .
    (11) params_mkdisk -> params_mkdisk . param_mkdisk
    (13) param_mkdisk -> . GUION PATH IGUAL CADENA
    (14) param_mkdisk -> . GUION PATH IGUAL CADENA_SC
    (15) param_mkdisk -> . GUION SIZE IGUAL ENTERO
    (16) param_mkdisk -> . GUION UNIT IGUAL CADENA_SC

    EXECUTE         reduce using rule 10 (command_mkdisk -> MKDISK params_mkdisk .)
    MKDISK          reduce using rule 10 (command_mkdisk -> MKDISK params_mkdisk .)
    FDISK           reduce using rule 10 (command_mkdisk -> MKDISK params_mkdisk .)
    REP             reduce using rule 10 (command_mkdisk -> MKDISK params_mkdisk .)
    $end            reduce using rule 10 (command_mkdisk -> MKDISK params_mkdisk .)
    GUION           shift and go to state 16

    param_mkdisk                   shift and go to state 22

state 15

    (12) params_mkdisk -> param_mkdisk .

    GUION           reduce using rule 12 (params_mkdisk -> param_mkdisk .)
    EXECUTE         reduce using rule 12 (params_mkdisk -> param_mkdisk .)
    MKDISK          reduce using rule 12 (params_mkdisk -> param_mkdisk .)
    FDISK           reduce using rule 12 (params_mkdisk -> param_mkdisk .)
    REP             reduce using rule 12 (params_mkdisk -> param_mkdisk .)
    $end            reduce using rule 12 (params_mkdisk -> param_mkdisk .)


state 16

    (13) param_mkdisk -> GUION . PATH IGUAL CADENA
    (14) param_mkdisk -> GUION . PATH IGUAL CADENA_SC
    (15) param_mkdisk -> GUION . SIZE IGUAL ENTERO
    (16) param_mkdisk -> GUION . UNIT IGUAL CADENA_SC

    PATH            shift and go to state 23
    SIZE            shift and go to state 24
    UNIT            shift and go to state 25


state 17

    (17) command_fdisk -> FDISK params_fdisk .
    (18) params_fdisk -> params_fdisk . param_fdisk
    (20) param_fdisk -> . GUION PATH IGUAL CADENA
    (21) param_fdisk -> . GUION PATH IGUAL CADENA_SC
    (22) param_fdisk -> . GUION SIZE IGUAL ENTERO
    (23) param_fdisk -> . GUION UNIT IGUAL CADENA_SC
    (24) param_fdisk -> . GUION NAME IGUAL CADENA
    (25) param_fdisk -> . GUION NAME IGUAL CADENA_SC

    EXECUTE         reduce using rule 17 (command_fdisk -> FDISK params_fdisk .)
    MKDISK          reduce using rule 17 (command_fdisk -> FDISK params_fdisk .)
    FDISK           reduce using rule 17 (command_fdisk -> FDISK params_fdisk .)
    REP             reduce using rule 17 (command_fdisk -> FDISK params_fdisk .)
    $end            reduce using rule 17 (command_fdisk -> FDISK params_fdisk .)
    GUION           shift and go to state 19

    param_fdisk                    shift and go to state 26

state 18

    (19) params_fdisk -> param_fdisk .

    GUION           reduce using rule 19 (params_fdisk -> param_fdisk .)
    EXECUTE         reduce using rule 19 (params_fdisk -> param_fdisk .)
    MKDISK          reduce using rule 19 (params_fdisk -> param_fdisk .)
    FDISK           reduce using rule 19 (params_fdisk -> param_fdisk .)
    REP             reduce using rule 19 (params_fdisk -> param_fdisk .)
    $end            reduce using rule 19 (params_fdisk -> param_fdisk .)


state 19

    (20) param_fdisk -> GUION . PATH IGUAL CADENA
    (21) param_fdisk -> GUION . PATH IGUAL CADENA_SC
    (22) param_fdisk -> GUION . SIZE IGUAL ENTERO
    (23) param_fdisk -> GUION . UNIT IGUAL CADENA_SC
    (24) param_fdisk -> GUION . NAME IGUAL CADENA
    (25) param_fdisk -> GUION . NAME IGUAL CADENA_SC

    PATH            shift and go to state 27
    SIZE            shift and go to state 28
    UNIT            shift and go to state 29
    NAME            shift and go to state 30


state 20

    (26) command_rep -> REP GUION . PATH IGUAL CADENA
    (27) command_rep -> REP GUION . PATH IGUAL CADENA_SC

    PATH            shift and go to state 31


state 21

    (8) command_execute -> EXECUTE GUION PATH . IGUAL CADENA
    (9) command_execute -> EXECUTE GUION PATH . IGUAL CADENA_SC

    IGUAL           shift and go to state 32


state 22

    (11) params_mkdisk -> params_mkdisk param_mkdisk .

    GUION           reduce using rule 11 (params_mkdisk -> params_mkdisk param_mkdisk .)
    EXECUTE         reduce using rule 11 (params_mkdisk -> params_mkdisk param_mkdisk .)
    MKDISK          reduce using rule 11 (params_mkdisk -> params_mkdisk param_mkdisk .)
    FDISK           reduce using rule 11 (params_mkdisk -> params_mkdisk param_mkdisk .)
    REP             reduce using rule 11 (params_mkdisk -> params_mkdisk param_mkdisk .)
    $end            reduce using rule 11 (params_mkdisk -> params_mkdisk param_mkdisk .)


state 23

    (13) param_mkdisk -> GUION PATH . IGUAL CADENA
    (14) param_mkdisk -> GUION PATH . IGUAL CADENA_SC

    IGUAL           shift and go to state 33


state 24

    (15) param_mkdisk -> GUION SIZE . IGUAL ENTERO

    IGUAL           shift and go to state 34


state 25

    (16) param_mkdisk -> GUION UNIT . IGUAL CADENA_SC

    IGUAL           shift and go to state 35


state 26

    (18) params_fdisk -> params_fdisk param_fdisk .

    GUION           reduce using rule 18 (params_fdisk -> params_fdisk param_fdisk .)
    EXECUTE         reduce using rule 18 (params_fdisk -> params_fdisk param_fdisk .)
    MKDISK          reduce using rule 18 (params_fdisk -> params_fdisk param_fdisk .)
    FDISK           reduce using rule 18 (params_fdisk -> params_fdisk param_fdisk .)
    REP             reduce using rule 18 (params_fdisk -> params_fdisk param_fdisk .)
    $end            reduce using rule 18 (params_fdisk -> params_fdisk param_fdisk .)


state 27

    (20) param_fdisk -> GUION PATH . IGUAL CADENA
    (21) param_fdisk -> GUION PATH . IGUAL CADENA_SC

    IGUAL           shift and go to state 36


state 28

    (22) param_fdisk -> GUION SIZE . IGUAL ENTERO

    IGUAL           shift and go to state 37


state 29

    (23) param_fdisk -> GUION UNIT . IGUAL CADENA_SC

    IGUAL           shift and go to state 38


state 30

    (24) param_fdisk -> GUION NAME . IGUAL CADENA
    (25) param_fdisk -> GUION NAME . IGUAL CADENA_SC

    IGUAL           shift and go to state 39


state 31

    (26) command_rep -> REP GUION PATH . IGUAL CADENA
    (27) command_rep -> REP GUION PATH . IGUAL CADENA_SC

    IGUAL           shift and go to state 40


state 32

    (8) command_execute -> EXECUTE GUION PATH IGUAL . CADENA
    (9) command_execute -> EXECUTE GUION PATH IGUAL . CADENA_SC

    CADENA          shift and go to state 41
    CADENA_SC       shift and go to state 42


state 33

    (13) param_mkdisk -> GUION PATH IGUAL . CADENA
    (14) param_mkdisk -> GUION PATH IGUAL . CADENA_SC

    CADENA          shift and go to state 43
    CADENA_SC       shift and go to state 44


state 34

    (15) param_mkdisk -> GUION SIZE IGUAL . ENTERO

    ENTERO          shift and go to state 45


state 35

    (16) param_mkdisk -> GUION UNIT IGUAL . CADENA_SC

    CADENA_SC       shift and go to state 46


state 36

    (20) param_fdisk -> GUION PATH IGUAL . CADENA
    (21) param_fdisk -> GUION PATH IGUAL . CADENA_SC

    CADENA          shift and go to state 47
    CADENA_SC       shift and go to state 48


state 37

    (22) param_fdisk -> GUION SIZE IGUAL . ENTERO

    ENTERO          shift and go to state 49


state 38

    (23) param_fdisk -> GUION UNIT IGUAL . CADENA_SC

    CADENA_SC       shift and go to state 50


state 39

    (24) param_fdisk -> GUION NAME IGUAL . CADENA
    (25) param_fdisk -> GUION NAME IGUAL . CADENA_SC

    CADENA          shift and go to state 51
    CADENA_SC       shift and go to state 52


state 40

    (26) command_rep -> REP GUION PATH IGUAL . CADENA
    (27) command_rep -> REP GUION PATH IGUAL . CADENA_SC

    CADENA          shift and go to state 53
    CADENA_SC       shift and go to state 54


state 41

    (8) command_execute -> EXECUTE GUION PATH IGUAL CADENA .

    EXECUTE         reduce using rule 8 (command_execute -> EXECUTE GUION PATH IGUAL CADENA .)
    MKDISK          reduce using rule 8 (command_execute -> EXECUTE GUION PATH IGUAL CADENA .)
    FDISK           reduce using rule 8 (command_execute -> EXECUTE GUION PATH IGUAL CADENA .)
    REP             reduce using rule 8 (command_execute -> EXECUTE GUION PATH IGUAL CADENA .)
    $end            reduce using rule 8 (command_execute -> EXECUTE GUION PATH IGUAL CADENA .)


state 42

    (9) command_execute -> EXECUTE GUION PATH IGUAL CADENA_SC .

    EXECUTE         reduce using rule 9 (command_execute -> EXECUTE GUION PATH IGUAL CADENA_SC .)
    MKDISK          reduce using rule 9 (command_execute -> EXECUTE GUION PATH IGUAL CADENA_SC .)
    FDISK           reduce using rule 9 (command_execute -> EXECUTE GUION PATH IGUAL CADENA_SC .)
    REP             reduce using rule 9 (command_execute -> EXECUTE GUION PATH IGUAL CADENA_SC .)
    $end            reduce using rule 9 (command_execute -> EXECUTE GUION PATH IGUAL CADENA_SC .)


state 43

    (13) param_mkdisk -> GUION PATH IGUAL CADENA .

    GUION           reduce using rule 13 (param_mkdisk -> GUION PATH IGUAL CADENA .)
    EXECUTE         reduce using rule 13 (param_mkdisk -> GUION PATH IGUAL CADENA .)
    MKDISK          reduce using rule 13 (param_mkdisk -> GUION PATH IGUAL CADENA .)
    FDISK           reduce using rule 13 (param_mkdisk -> GUION PATH IGUAL CADENA .)
    REP             reduce using rule 13 (param_mkdisk -> GUION PATH IGUAL CADENA .)
    $end            reduce using rule 13 (param_mkdisk -> GUION PATH IGUAL CADENA .)


state 44

    (14) param_mkdisk -> GUION PATH IGUAL CADENA_SC .

    GUION           reduce using rule 14 (param_mkdisk -> GUION PATH IGUAL CADENA_SC .)
    EXECUTE         reduce using rule 14 (param_mkdisk -> GUION PATH IGUAL CADENA_SC .)
    MKDISK          reduce using rule 14 (param_mkdisk -> GUION PATH IGUAL CADENA_SC .)
    FDISK           reduce using rule 14 (param_mkdisk -> GUION PATH IGUAL CADENA_SC .)
    REP             reduce using rule 14 (param_mkdisk -> GUION PATH IGUAL CADENA_SC .)
    $end            reduce using rule 14 (param_mkdisk -> GUION PATH IGUAL CADENA_SC .)


state 45

    (15) param_mkdisk -> GUION SIZE IGUAL ENTERO .

    GUION           reduce using rule 15 (param_mkdisk -> GUION SIZE IGUAL ENTERO .)
    EXECUTE         reduce using rule 15 (param_mkdisk -> GUION SIZE IGUAL ENTERO .)
    MKDISK          reduce using rule 15 (param_mkdisk -> GUION SIZE IGUAL ENTERO .)
    FDISK           reduce using rule 15 (param_mkdisk -> GUION SIZE IGUAL ENTERO .)
    REP             reduce using rule 15 (param_mkdisk -> GUION SIZE IGUAL ENTERO .)
    $end            reduce using rule 15 (param_mkdisk -> GUION SIZE IGUAL ENTERO .)


state 46

    (16) param_mkdisk -> GUION UNIT IGUAL CADENA_SC .

    GUION           reduce using rule 16 (param_mkdisk -> GUION UNIT IGUAL CADENA_SC .)
    EXECUTE         reduce using rule 16 (param_mkdisk -> GUION UNIT IGUAL CADENA_SC .)
    MKDISK          reduce using rule 16 (param_mkdisk -> GUION UNIT IGUAL CADENA_SC .)
    FDISK           reduce using rule 16 (param_mkdisk -> GUION UNIT IGUAL CADENA_SC .)
    REP             reduce using rule 16 (param_mkdisk -> GUION UNIT IGUAL CADENA_SC .)
    $end            reduce using rule 16 (param_mkdisk -> GUION UNIT IGUAL CADENA_SC .)


state 47

    (20) param_fdisk -> GUION PATH IGUAL CADENA .

    GUION           reduce using rule 20 (param_fdisk -> GUION PATH IGUAL CADENA .)
    EXECUTE         reduce using rule 20 (param_fdisk -> GUION PATH IGUAL CADENA .)
    MKDISK          reduce using rule 20 (param_fdisk -> GUION PATH IGUAL CADENA .)
    FDISK           reduce using rule 20 (param_fdisk -> GUION PATH IGUAL CADENA .)
    REP             reduce using rule 20 (param_fdisk -> GUION PATH IGUAL CADENA .)
    $end            reduce using rule 20 (param_fdisk -> GUION PATH IGUAL CADENA .)


state 48

    (21) param_fdisk -> GUION PATH IGUAL CADENA_SC .

    GUION           reduce using rule 21 (param_fdisk -> GUION PATH IGUAL CADENA_SC .)
    EXECUTE         reduce using rule 21 (param_fdisk -> GUION PATH IGUAL CADENA_SC .)
    MKDISK          reduce using rule 21 (param_fdisk -> GUION PATH IGUAL CADENA_SC .)
    FDISK           reduce using rule 21 (param_fdisk -> GUION PATH IGUAL CADENA_SC .)
    REP             reduce using rule 21 (param_fdisk -> GUION PATH IGUAL CADENA_SC .)
    $end            reduce using rule 21 (param_fdisk -> GUION PATH IGUAL CADENA_SC .)


state 49

    (22) param_fdisk -> GUION SIZE IGUAL ENTERO .

    GUION           reduce using rule 22 (param_fdisk -> GUION SIZE IGUAL ENTERO .)
    EXECUTE         reduce using rule 22 (param_fdisk -> GUION SIZE IGUAL ENTERO .)
    MKDISK          reduce using rule 22 (param_fdisk -> GUION SIZE IGUAL ENTERO .)
    FDISK           reduce using rule 22 (param_fdisk -> GUION SIZE IGUAL ENTERO .)
    REP             reduce using rule 22 (param_fdisk -> GUION SIZE IGUAL ENTERO .)
    $end            reduce using rule 22 (param_fdisk -> GUION SIZE IGUAL ENTERO .)


state 50

    (23) param_fdisk -> GUION UNIT IGUAL CADENA_SC .

    GUION           reduce using rule 23 (param_fdisk -> GUION UNIT IGUAL CADENA_SC .)
    EXECUTE         reduce using rule 23 (param_fdisk -> GUION UNIT IGUAL CADENA_SC .)
    MKDISK          reduce using rule 23 (param_fdisk -> GUION UNIT IGUAL CADENA_SC .)
    FDISK           reduce using rule 23 (param_fdisk -> GUION UNIT IGUAL CADENA_SC .)
    REP             reduce using rule 23 (param_fdisk -> GUION UNIT IGUAL CADENA_SC .)
    $end            reduce using rule 23 (param_fdisk -> GUION UNIT IGUAL CADENA_SC .)


state 51

    (24) param_fdisk -> GUION NAME IGUAL CADENA .

    GUION           reduce using rule 24 (param_fdisk -> GUION NAME IGUAL CADENA .)
    EXECUTE         reduce using rule 24 (param_fdisk -> GUION NAME IGUAL CADENA .)
    MKDISK          reduce using rule 24 (param_fdisk -> GUION NAME IGUAL CADENA .)
    FDISK           reduce using rule 24 (param_fdisk -> GUION NAME IGUAL CADENA .)
    REP             reduce using rule 24 (param_fdisk -> GUION NAME IGUAL CADENA .)
    $end            reduce using rule 24 (param_fdisk -> GUION NAME IGUAL CADENA .)


state 52

    (25) param_fdisk -> GUION NAME IGUAL CADENA_SC .

    GUION           reduce using rule 25 (param_fdisk -> GUION NAME IGUAL CADENA_SC .)
    EXECUTE         reduce using rule 25 (param_fdisk -> GUION NAME IGUAL CADENA_SC .)
    MKDISK          reduce using rule 25 (param_fdisk -> GUION NAME IGUAL CADENA_SC .)
    FDISK           reduce using rule 25 (param_fdisk -> GUION NAME IGUAL CADENA_SC .)
    REP             reduce using rule 25 (param_fdisk -> GUION NAME IGUAL CADENA_SC .)
    $end            reduce using rule 25 (param_fdisk -> GUION NAME IGUAL CADENA_SC .)


state 53

    (26) command_rep -> REP GUION PATH IGUAL CADENA .

    EXECUTE         reduce using rule 26 (command_rep -> REP GUION PATH IGUAL CADENA .)
    MKDISK          reduce using rule 26 (command_rep -> REP GUION PATH IGUAL CADENA .)
    FDISK           reduce using rule 26 (command_rep -> REP GUION PATH IGUAL CADENA .)
    REP             reduce using rule 26 (command_rep -> REP GUION PATH IGUAL CADENA .)
    $end            reduce using rule 26 (command_rep -> REP GUION PATH IGUAL CADENA .)


state 54

    (27) command_rep -> REP GUION PATH IGUAL CADENA_SC .

    EXECUTE         reduce using rule 27 (command_rep -> REP GUION PATH IGUAL CADENA_SC .)
    MKDISK          reduce using rule 27 (command_rep -> REP GUION PATH IGUAL CADENA_SC .)
    FDISK           reduce using rule 27 (command_rep -> REP GUION PATH IGUAL CADENA_SC .)
    REP             reduce using rule 27 (command_rep -> REP GUION PATH IGUAL CADENA_SC .)
    $end            reduce using rule 27 (command_rep -> REP GUION PATH IGUAL CADENA_SC .)

